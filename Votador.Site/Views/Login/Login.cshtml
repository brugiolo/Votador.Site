@model Votador.Site.Models.LoginViewModel

@{
    ViewData["Title"] = "Login";

    Context.Session.TryGetValue("usuario.id", out byte[] usuarioIdBytes);
    var usuarioLogado = usuarioIdBytes != null;
}

@if (!usuarioLogado)
{
    <h3>Faça o login e participe</h3>

    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="View">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Senha" class="control-label"></label>
                    <input type="password" asp-for="Senha" class="form-control" />
                    <span asp-validation-for="Senha" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Entrar" class="btn btn-primary" asp-action="Autenticar" />
                </div>
            </form>
        </div>
    </div>
}
else
{
    Context.Session.TryGetValue("usuario.email", out byte[] usuarioEmailBytes);
    var email = System.Text.Encoding.Default.GetString(usuarioEmailBytes);

    <h3>Usuário logado: </h3>@email

    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="View">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input type="submit" value="Sair" class="btn btn-danger" asp-action="Logout" />
                </div>
            </form>
        </div>
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
